name: Library Compilation Test

# The workflow will run on push to master branch (create result file) and on pull requests (adding results comment)
on:
  # Run when new changes are pushed to master branch
  push:
    branches:
      - 'master'
  
  pull_request:
    types: [opened, reopened, synchronize, labeled]

env:
  # It's convenient to set variables for values used multiple times in the workflow
  SKETCHES_REPORTS_PATH: libraries-report
  SKETCHES_REPORTS_ARTIFACT_NAME: libraries-report
  RESULT_LIBRARY_TEST_FILE: LIBRARY_TEST.md
  JSON_LIBRARY_LIST_FILE: .github/workflows/lib.json

jobs:
  compile-sketch:
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'push' && github.repository == 'me-no-dev/OpenAI-ESP32')
    runs-on: ubuntu-latest

    env:
      # Options of how will be the ESP32 Arduino core installed
      BOARD_MANAGER: |
        - name: "espressif:esp32"
          source-url: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_dev_index.json
          version: 2.0.7

      GITHUB_URL: |
        - name: "espressif:esp32"
          source-url: https://github.com/espressif/arduino-esp32.git

    strategy:
      matrix:
        target:
          - esp32
          - esp32s2
          - esp32c3
          - esp32s3

        include:
          - target: esp32
            fqbn: espressif:esp32:esp32
          - target: esp32s2
            fqbn: espressif:esp32:esp32s2
          - target: esp32c3
            fqbn: espressif:esp32:esp32c3
          - target: esp32s3
            fqbn: espressif:esp32:esp32s3


    steps:
      # This step makes the contents of the repository available to the workflow
      - name: Checkout repository
        uses: actions/checkout@v4

      # Possible platforms input for compile-sketches
      # ${{ env.BOARD_MANAGER }}
      # ${{ env.GITHUB_URL }}

      - name: Compile sketch
        uses: P-R-O-C-H-Y/compile-sketches@main
        with:
          platforms: |
            ${{ env.GITHUB_URL }}
          target: ${{ matrix.target }}
          fqbn: ${{ matrix.fqbn }}
          use-json-file: true
          json-path: ${{ env.JSON_LIBRARY_LIST_FILE }}
          enable-deltas-report: true
          sketches-report-path: ${{ env.SKETCHES_REPORTS_PATH }}
          enable-warnings-report: true
          cli-compile-flags: |
            - --warnings="all"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.SKETCHES_REPORTS_ARTIFACT_NAME }}
          path: ${{ env.SKETCHES_REPORTS_PATH }}

  report-comment:
    needs: compile-sketch  # Wait for the compile job to finish to get the data for the report
    if: github.event_name == 'pull_request' # Only run the job when the workflow is triggered by a pull request
    runs-on: ubuntu-latest
    steps:
      # This step is needed to get the size data produced by the compile jobs
      - name: Download sketches reports artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.SKETCHES_REPORTS_ARTIFACT_NAME }}
          path: ${{ env.SKETCHES_REPORTS_PATH }}

      - name: Report results
        uses: P-R-O-C-H-Y/report-size-deltas@main
        with:
          sketches-reports-source: ${{ env.SKETCHES_REPORTS_PATH }}

  report-to-file:
    needs: compile-sketch  # Wait for the compile job to finish to get the data for the report
    if: github.event_name == 'push' # Only run the job when the workflow is triggered by a push
    runs-on: ubuntu-latest
    steps:
      # Check out repository
      - name: Checkout repository    
        uses: actions/checkout@v4

      # This step is needed to get the size data produced by the compile jobs
      - name: Download sketches reports artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.SKETCHES_REPORTS_ARTIFACT_NAME }}
          path: ${{ env.SKETCHES_REPORTS_PATH }}

      - name: Report results
        uses: P-R-O-C-H-Y/report-size-deltas@main
        with:
          sketches-reports-source: ${{ env.SKETCHES_REPORTS_PATH }}
          destination-file: ${{ env.RESULT_LIBRARY_TEST_FILE }}

      - name: Append file with action URL
        uses: DamianReeves/write-file-action@master
        with:
          path: ${{ env.RESULT_LIBRARY_TEST_FILE }}
          contents: |
            / [GitHub Action Link](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
          write-mode: append

      - name: Push to github repo
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ${{ env.RESULT_LIBRARY_TEST_FILE }}
          git commit -m "Generated Library Test Results"
          git push
